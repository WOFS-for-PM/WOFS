# TODO List
- [ ] Pass fill_param to __fill_in_pm_inode
- [ ] *Pass out in-DRAM object
- [ ] *Design Cache-able Objects to Alleviate Memory Consumption.

# 2023/7/1 ~ 2023/8/5: Optimization and Real-World Evaluation
- [x] Optimizing Append Operation
  - [x] If the space is already allocated and not overwritten, then we can directly append the data to the end of the file.
  - [x] Huge page allocation to reduce the number of PMEM allocations and the number of write package to maintain.
- [x] Optimizing Block Free Operation: Using O(lgN) deletion algorithm instead of O(N) iteration.
- [x] YCSB with LevelDB
- [x] GraphChi
- [x] Recovery Performance  

# 2023/3/8 ~ 2023/4/3: Evaluation and Debugging  
- [x] Using memcpy to dump packages
- [x] Pass Normal/Failure Recovery
- [x] Fix many minor bugs
- [x] Measuring FIO/Filebench/Recovery Performance
- [x] Optimize Failure Recovery: 
    - [x] Apply Hint to Empty Block, avoiding scanning times.
    - [x] Using Thread-Local Buffer to scan the empty block.
    - [x] Using Bitmap Buffer to prevent frequent bitmap I/O.

# 2023/3/6 ~ 2023/3/8: Some Optimizations
- [x] Simplify create operation.
- [x] Replace rbtree with rbtree_cached to prevent overheads of `rbfirst()`.
- [x] Using memcpy to dump CREATE_PACKAGE.
- [x] Reduce ref_data size
- [x] Adaptive I/O in the write Path.

# 2023/3/4 ~ 2023/3/5: Optimizing Metadata Size
- [x] Add param name for anonymous struct
- [x] Reduce NEW_INODE_PKG Size
- [x] Optimize Unlink Operation
- [x] Detect Memory Consumption

# 2023/2/26 ~ 2023/2/28: FIO/Filebench Test
- [x] Measure the Performance of FIO & Filebench. 
- Finding: Create operations in Filebench are too slow since its too many writes that evict the PM data from the buffer. 

# 2023/2/17 ~ 2023/2/25: Multiple Thread Filebench Test Prepare 
- [x] Prepare for Filebench/Fxmark/Trace
- [x] Debug Filebench single thread
- [x] Debug Filebench multi thread
- [x] Fix many shifts errors (`u32` to `u64` errors)
- [x] Fix overwrites overflows (`reclaim_dram_data()`)
- [x] Fix range locks bugs
- [x] Fix pending table errors
- [x] Fix layout id calculation errors
- [x] Fix many memory flow errors

# 2023/2/7 ~ 2023/2/17: Multiple Thread FIO Test Prepare
- [x] Debug Multi-Thread I/O
- [x] Debug Mount Write Unmount sequence
- [x] Fix many double free errors 

# 2023/2/4 ~ 2023/2/6: Single Thread FIO Test Prepare (Mainly work in 2/6)
- [x] Debug Single Thread I/O
- [x] Debug Create/Mknod/Mkdir
- [x] Debug Readdir

# 2023/1/30 ~ 2023/2/3
- [x] Implement File Operations
- [x] Encapsulate the Mknod/Mkdir/Create

# 2023/1/27 ~ 2023/1/29 
- [x] Migrate Recovery
- [x] Implement I/O
- [x] Declare inode info header as pointer

# 2023/1/25 ~ 2023/1/26
- [x] Migrate two-layer allocator.
- [x] Migrate object manager.
- [x] Aggregate the memory allocators (i.e., those slab allocators).
- [x] Migrate Inode manager.

# 2023/1/24
- Start working on the new version of the project, which implements the new features, i.e., WRITE-ONCE
- Clear Time Status

- Renaming REGION to AttrLog
- Renaming Journal to Transactions
